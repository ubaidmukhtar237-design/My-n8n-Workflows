{
  "active": false,
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Code in JavaScript1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet": {
      "main": [
        []
      ]
    }
  },
  "createdAt": "2025-09-19T11:18:22.021Z",
  "id": "0wEO94EbDLFqh9Bt",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Reschedule",
  "nodes": [
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -1744,
        -64
      ],
      "id": "0980d0f2-02fc-4a22-85f4-c806a63289e2",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.cal.com/v2/bookings/{{ $json.edit.booking_id }}/reschedule",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cal-api-version",
              "value": "2024-08-13"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "start",
              "value": "={{ $json.edit.new_isoDateTime }}"
            },
            {
              "name": "reschedulingReason",
              "value": "={{ $json.edit.reason }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -720,
        -64
      ],
      "id": "e3f622df-6019-4997-b5c6-7958371f6d13",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "1KUi1Z17BqtoNnPl",
          "name": "Cal.com"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "",
        "height": 768,
        "width": 1760,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1920,
        -512
      ],
      "typeVersion": 1,
      "id": "7c72d41b-5e22-43c8-bc11-53890072738f",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4c716afd-93e0-4ba9-8937-885c1b621272",
              "name": "edit.booking_id",
              "value": "={{ $json.booking_id }}",
              "type": "string"
            },
            {
              "id": "c7b45884-536b-4552-9b31-796df0d3641d",
              "name": "edit.new_isoDateTime",
              "value": "={{ $json.new_isoDateTime }}",
              "type": "string"
            },
            {
              "id": "cd37c405-80a8-462a-a199-3e14378c5b92",
              "name": "edit.email",
              "value": "={{ $json.email }}",
              "type": "string"
            },
            {
              "id": "82bdf301-f181-42e9-909a-a5f2196726ee",
              "name": "edit.reason",
              "value": "={{ $json.reason }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -960,
        -64
      ],
      "id": "4fc0eefa-4f39-4210-93c1-f0c01d6f0af6",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "jsCode": "// This is the ULTIMATE \"Multi-Worker\" Data Cleaner. It will try THREE different\n// methods to clean the AI's garbage output. It is designed to be as\n// resilient as possible to the AI's constantly changing formats.\n\nconst item = items[0];\n\n// --- Helper Function: Extracts a value using a flexible Regex ---\n// This is our primary \"brute force\" method.\nfunction extractValue(key, str) {\n  // This Regex looks for \"key\":\"value\" and handles multiple backslashes.\n  const regex = new RegExp(`\"${key}\"\\\\s*:\\\\s*\"(.*?)\"`);\n  const match = str.match(regex);\n  return match ? match[1].replace(/\\\\/g, '') : null;\n}\n\ntry {\n  let rawString = item.json.query;\n  if (!rawString) throw new Error(\"Input 'query' is missing.\");\n\n  // --- STAGE 1: The \"Brute Force\" Regex Extraction ---\n  // We try this first because it works even on invalid JSON.\n  let bookingId = extractValue(\"booking_id\", rawString) || extractValue(\"BookingUID\", rawString);\n  let dateTime = extractValue(\"new_isoDateTime\", rawString) || extractValue(\"isoDateTime\", rawString);\n  let email = extractValue(\"email\", rawString);\n  let reason = extractValue(\"reason\", rawString);\n\n  // --- STAGE 2: The \"JSON Parse\" Fallback ---\n  // If the Regex failed to find everything, it means the AI might have sent clean JSON.\n  // We will try parsing it as a backup plan.\n  if (!bookingId && !dateTime) {\n    console.log(\"Regex failed. Attempting JSON.parse() fallback...\");\n    try {\n      let data = JSON.parse(rawString);\n      // Handle the \"query-in-a-query\" case\n      if (data.query) {\n        data = JSON.parse(data.query);\n      }\n      bookingId = data.booking_id || data.BookingUID || null;\n      dateTime = data.new_isoDateTime || data.isoDateTime || null;\n      email = data.email || null;\n      reason = data.reason || null;\n    } catch (e) {\n      console.log(\"JSON.parse() also failed. The input string is completely broken.\");\n    }\n  }\n\n  // --- STAGE 3: The \"Ultimate Cleanup\" ---\n  // This is a final check. If the values still have extra backslashes, we clean them.\n  function finalClean(str) {\n    return str ? str.replace(/\\\\/g, '') : null;\n  }\n\n  // Assign the cleaned values to the output.\n  item.json.booking_id = finalClean(bookingId);\n  item.json.new_isoDateTime = finalClean(dateTime);\n  item.json.email = finalClean(email);\n  item.json.reason = finalClean(reason);\n\n} catch (error) {\n  item.json.error = `Failed to extract data from query string: ${error.message}`;\n}\n\n// Return the item with all the new, clean fields.\nreturn [item];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1344,
        -64
      ],
      "id": "30d3adb5-e2a3-45ad-87e0-0125458d1649",
      "name": "Code in JavaScript1"
    },
    {
      "parameters": {
        "content": "This is special code node and different from other code nodes used in other workflows for slack chatbot designed to format these both types of input or stringified paramters given below:\n\n1)\n[\n{\n\"query\":\n\"{\"query\":\"{\\\"BookingUID\\\":\\\"d6tktXhj2jEkisCZrLrDDE\\\",\\\"new_isoDateTime\\\":\\\"2025-09-22T09:00:00\\\",\\\"email\\\":\\\"ubaidnasir1631@gmail.com\\\",\\\"reason\\\":\\\"my brother died\\\"}\"}\"\n}\n]\n\n2)\n[\n{\n\"query\": \n\"{\"booking_id\":\"appt_12345abc\",\"isoDateTime\":\"2025-10-15T10:00:00.000Z\",\"email\":\"john.doe.client@example.com\",\"reason\":\"Client had a personal emergency and needs to move the appointment.\"}\"\n}\n]",
        "height": 576,
        "width": 544,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1552,
        -496
      ],
      "typeVersion": 1,
      "id": "989cd6aa-9dce-485d-acb7-50c1744a39f3",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1Sa93ckJV4bNFE9IZ7zHOZC85f95G5UAGQqi57UBN09Q",
          "mode": "list",
          "cachedResultName": "cal.com Booking uids",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Sa93ckJV4bNFE9IZ7zHOZC85f95G5UAGQqi57UBN09Q/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Sa93ckJV4bNFE9IZ7zHOZC85f95G5UAGQqi57UBN09Q/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "AttendeeName",
              "displayName": "AttendeeName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AttendeeEmail",
              "displayName": "AttendeeEmail",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AttendeePhoneNo.",
              "displayName": "AttendeePhoneNo.",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AttendeeTimeZone",
              "displayName": "AttendeeTimeZone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AttendeeLanguage",
              "displayName": "AttendeeLanguage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "TitleOfTheBooking",
              "displayName": "TitleOfTheBooking",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "HostNameOfTheEvent",
              "displayName": "HostNameOfTheEvent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "BookingId",
              "displayName": "BookingId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "BookingUID",
              "displayName": "BookingUID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "EventTypeSlug",
              "displayName": "EventTypeSlug",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "EventTypeID",
              "displayName": "EventTypeID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "EventTypeLocation",
              "displayName": "EventTypeLocation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "TheTimeAtBookingIsCreated",
              "displayName": "TheTimeAtBookingIsCreated",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "StartTime",
              "displayName": "StartTime",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "EndTime",
              "displayName": "EndTime",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -448,
        -80
      ],
      "id": "a73a6a97-560e-4ed4-97d6-b88552dfe1c7",
      "name": "Update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "JOHwDixlr7umKmYo",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "query": "{\"query\":\"{\\\"BookingUID\\\":\\\"d6tktXhj2jEkisCZrLrDDE\\\",\\\"new_isoDateTime\\\":\\\"2025-09-22T09:00:00\\\",\\\"email\\\":\\\"ubaidnasir1631@gmail.com\\\",\\\"reason\\\":\\\"my brother died\\\"}\"}"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-19T11:18:22.023Z",
      "updatedAt": "2025-09-19T11:18:22.023Z",
      "role": "workflow:owner",
      "workflowId": "0wEO94EbDLFqh9Bt",
      "projectId": "HHLWOKEAArOwm3kN"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-20T14:21:54.000Z",
  "versionId": "f7a54084-5239-49b7-be85-c4d953b55f14"
}