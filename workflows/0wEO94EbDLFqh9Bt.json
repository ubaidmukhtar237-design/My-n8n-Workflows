{
  "active": false,
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-19T11:18:22.021Z",
  "id": "0wEO94EbDLFqh9Bt",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Reschedule",
  "nodes": [
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -1664,
        16
      ],
      "id": "0980d0f2-02fc-4a22-85f4-c806a63289e2",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.cal.com/v2/bookings/{{ $json.booking_id }}/reschedule",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cal-api-version",
              "value": "2024-08-13"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "start",
              "value": "={{ $json.isoDateTime }}"
            },
            {
              "name": "reschedulingReason",
              "value": "={{ $json.reason }}"
            },
            {
              "name": "rescheduledBy",
              "value": "={{ $json.email }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -576,
        16
      ],
      "id": "e3f622df-6019-4997-b5c6-7958371f6d13",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "1KUi1Z17BqtoNnPl",
          "name": "Cal.com"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// This code is now simplified to handle a SINGLE stringified JSON object\n// and is now FLEXIBLE enough to handle inconsistent key names from the AI.\n\nconst item = items[0];\n\n// 1. Get the string from the 'query' property.\nconst queryString = item.json.query;\n\n// Safety check\nif (!queryString) {\n  item.json.error = \"The 'query' property is missing or empty.\";\n  return [item];\n}\n\ntry {\n  // 2. Parse the string back into a usable JavaScript object.\n  const data = JSON.parse(queryString);\n\n  // 3. Create the new, separate fields in the output.\n  item.json.booking_id = data.booking_id || null;\n  \n  // --- THE FIX IS HERE ---\n  // This line now checks for 'new_isoDateTime' first, and if that doesn't exist,\n  // it checks for the old name 'isoDateTime' as a fallback.\n  item.json.new_isoDateTime = data.new_isoDateTime || data.isoDateTime || null;\n  // --- END OF FIX ---\n  \n  item.json.email = data.email || null;\n  item.json.reason = data.reason || null;\n\n} catch (error) {\n  item.json.error = `Failed to parse query string: ${error.message}`;\n}\n\n// Return the item with all the new, clean fields.\nreturn [item];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1456,
        16
      ],
      "id": "a25f0d17-4365-45f9-8e39-ec153be82ff5",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0cf31534-5b11-4885-880f-fb4cc33474de",
              "name": "booking_id",
              "value": "={{ $json.booking_id }}",
              "type": "string"
            },
            {
              "id": "a27d22ed-dbc9-4db7-8f72-14592316480b",
              "name": "isoDateTime",
              "value": "={{ $json.new_isoDateTime }}",
              "type": "string"
            },
            {
              "id": "d0ede30a-927c-4d1b-a4ec-fff5a3649f34",
              "name": "email",
              "value": "={{ $json.email }}",
              "type": "string"
            },
            {
              "id": "811ea2fd-f70a-48fc-9564-1c4c8adad958",
              "name": "reason",
              "value": "={{ $json.reason }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -848,
        16
      ],
      "id": "c5dfc20c-cd18-4e1d-918a-cc0814ba6ce0",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.booking_id }}",
                    "rightValue": "null",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "7a21756f-59b8-4eac-ae33-189790f3fde2"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "63297cd6-0162-41b5-aa80-1f6a07743ef2",
                    "leftValue": "={{ $json.new_isoDateTime }}",
                    "rightValue": "null",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f034fa2d-008c-422f-b81c-51e40b191abd",
                    "leftValue": "={{ $json.email }}",
                    "rightValue": "null",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a65a4f85-78d0-4fbb-9bfc-08bc3846b1de",
                    "leftValue": "={{ $json.reason }}",
                    "rightValue": "null",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1216,
        208
      ],
      "id": "d42de888-9dd1-4a7a-ad8d-97bf32bdf97e",
      "name": "Switch"
    }
  ],
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "query": "{\"booking_id\":\"appt_12345abc\",\"isoDateTime\":\"2025-10-15T10:00:00.000Z\",\"email\":\"john.doe.client@example.com\",\"reason\":\"Client had a personal emergency and needs to move the appointment.\"}"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-19T11:18:22.023Z",
      "updatedAt": "2025-09-19T11:18:22.023Z",
      "role": "workflow:owner",
      "workflowId": "0wEO94EbDLFqh9Bt",
      "projectId": "HHLWOKEAArOwm3kN"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-20T12:47:59.000Z",
  "versionId": "d83e5ed1-907b-4751-9714-f08a6ee7b7c5"
}