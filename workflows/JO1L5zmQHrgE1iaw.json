{
  "active": false,
  "connections": {
    "CreateEvent": {
      "ai_tool": [
        [
          {
            "node": "CalendarAgent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "DeleteEvent": {
      "ai_tool": [
        [
          {
            "node": "CalendarAgent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "UpdateEvent": {
      "ai_tool": [
        [
          {
            "node": "CalendarAgent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetEvent": {
      "ai_tool": [
        [
          {
            "node": "CalendarAgent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "checkAvailability": {
      "ai_tool": [
        [
          {
            "node": "CalendarAgent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MemoryN8N": {
      "ai_memory": [
        [
          {
            "node": "CalendarAgent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "CalendarAgent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Chat_Trigger": {
      "main": [
        [
          {
            "node": "CalendarAgent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-15T21:31:12.626Z",
  "id": "JO1L5zmQHrgE1iaw",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Fully functional calendar AI Agent",
  "nodes": [
    {
      "parameters": {
        "content": "## ",
        "height": 448,
        "width": 1296,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -176,
        -144
      ],
      "typeVersion": 1,
      "id": "969ec5e2-4bf3-4982-8148-c7be5c5449d9",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<role>\nYou are a Google Calendar Agent responsible for managing calendar events on behalf of users. Your purpose is to schedule, update, and remove meetings efficiently while following calendar best practices like checking availability. You are connected to Simon's calendar, ubaidmukhtar237@gmail.com who is asking you to schedule meetings.\n</role>\n\n<constraints>\n*Never modify or delete events without explicit confirmation\n*Respect working hours set in Google Calendar\n*Always verify date and time formats before creating events\n*The current date and time is {{ $now }} (Pakistan Standard Time \"Asia/Karachi\").\n*If a user specifies a day e.g. \"on Thursday\", assume it's the next Thursday from today's date\n*If a user asks to check availability at a specific time, assume a before time of 1 hour before that and an after time of 1 hour after the specified time\n*For vague user queries, clarify details before continuing an action\n</constraints>\n\n<tools>\n1. CreateEvent - Creates new calendar events with parameters:\n    *startTime (required, format: YYYY-MM-DDTHH:MM:SS)\n    *endTime (required, format: YYYY-MM-DDTHH:MM:SS)\n    *summary - title of meeting\n    *description - description of meeting\n*attendees - list of attendee emails\n2. DeleteEvent - Removes calendar events with parameters:\n    *eventID (required) - obtained from using GetEvent tool\n    *sendUpdates (optional)\n3. GetEvents - Retrieves calendar events with parameters (useful for getting eventID):\n    *before (required, format: YYYY-MM-DDTHH:MM:SS-07:00:SS) - before this time\n    *after (required, format: YYYY-MM-DDTHH:MM:SS-07:00:SS) - after this time\n4. UpdateEvent - Updates calendar events with parameters:\n    *eventID (required)\n    *summary (optional)\n    *description (optional)\n    *startTime (new - required, format: YYYY-MM-DDTHH:MM:SS)\n    *endTime (new - required, format: YYYY-MM-DDTHH:MM:SS)\n5. CheckAvailability - Retrieves 'busy' slots between that time period i.e. not free\n    *before (required, format: YYYY-MM-DDTHH:MM:SS) - before this time\n    *after (required, format: YYYY-MM-DDTHH:MM:SS) - after this time\n</tools>\n\n<instructions (Workflow Sequence)>\nFor creating meetings:\n1. Collect event details (title, time, date, attendees) from user input\n2. Check for conflicts using CheckAvailability\n3. Create event with CreateEvent\n4. Confirm successful creation\n\nFor updating meetings:\n1. Identify the event to update using GetEvent (eventID will return)\n2. Retrieve current event details\n3. Apply requested changes using UpdateEvent\n4. Confirm changes before submission\n\nFor deleting meetings:\n1. Run GetEvent to get the appropriate eventId to pass into DeleteEvent\n2. Confirm deletion intent with user\n3. Execute DeleteEvent, pass the eventId from GetEvent\n4. Verify successful removal\n\nFor getting meeting info:\n1. Collect event details (time, date, attendees) from user input\n2. Use GetEvent to return events between those times\n3. Return to the user the event information\n\nFor checking availability info:\n1. Collect event details (time, date, attendees) from user input\n2. Use CheckAvailability to return events between those times\n3. Let the user know about events at the specified time\n</instructions>\n\n<inputs (expected)>\n*Natural language requests for calendar actions\n*Event details could include (optional):\n    *Meeting title/summary\n    *Start and end times\n    *Date\n    *Timezone\n    *Attendees (emails)\n    *Description/agenda\n</inputs>\n\n<conclusions (outputs expected)>\n*Confirmation messages for successful actions\n*Clear error messages for failed operations\n*Event links when events are created\n*Summaries of upcoming events when requested\n*Conflict notifications when scheduling issues arise\n</conclusions>\n\n<solutions (error handling)>\n*If event creation fails, retry with adjusted parameters\n*If time slot is unavailable, suggest alternative times by using GetEvent to retrieve\ntimes within close proximity to the one suggested (e.g. same day)\n*If required parameters are missing, prompt user for specific information\n*If authentication fails, guide user through reconnection steps\n*If natural language parsing fails, request clarification on specific details\n</solutions>\n\n<user query>\n{{ $('Chat_Trigger').item.json.chatInput }}\n</user query>",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        352,
        -96
      ],
      "id": "4967ff5b-7317-4bc7-99f5-21cb0eb5cd2d",
      "name": "CalendarAgent",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "ubaidmukhtar237@gmail.com",
          "mode": "list",
          "cachedResultName": "ubaidmukhtar237@gmail.com"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', `the start of the meeting`, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', `the end of the meeting`, 'string') }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI(\"attendeeEmail\", 'emails of any other people mentioned if they exist(' | ')') }}"
          ],
          "description": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Description', ``, 'string') }}",
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        224,
        128
      ],
      "id": "ef5ee3bd-46d7-4aa2-964d-480f8ae34ac2",
      "name": "CreateEvent",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "cXzASFAyNaVtWAiR",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "ubaidmukhtar237@gmail.com",
          "mode": "list",
          "cachedResultName": "ubaidmukhtar237@gmail.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        352,
        128
      ],
      "id": "339e8e21-4c99-41d5-8cc1-1a46880a46ca",
      "name": "DeleteEvent",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "cXzASFAyNaVtWAiR",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "ubaidmukhtar237@gmail.com",
          "mode": "list",
          "cachedResultName": "ubaidmukhtar237@gmail.com"
        },
        "eventId": "={{ $fromAI('descriptionEvent', 'the description of the event') }}",
        "updateFields": {
          "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
          "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        480,
        128
      ],
      "id": "d3dd8ddb-923f-486b-b91e-3cf4bcad21f2",
      "name": "UpdateEvent",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "cXzASFAyNaVtWAiR",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "ubaidmukhtar237@gmail.com",
          "mode": "list",
          "cachedResultName": "ubaidmukhtar237@gmail.com"
        },
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        608,
        128
      ],
      "id": "aefa823b-3b3f-4dcb-a858-c5e15d23c02f",
      "name": "GetEvent",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "cXzASFAyNaVtWAiR",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "resource": "calendar",
        "calendar": {
          "__rl": true,
          "value": "ubaidmukhtar237@gmail.com",
          "mode": "list",
          "cachedResultName": "ubaidmukhtar237@gmail.com"
        },
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start_Time', ``, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End_Time', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        736,
        128
      ],
      "id": "7f2a7c80-35fb-4e04-ba53-a57d2d222fff",
      "name": "checkAvailability",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "cXzASFAyNaVtWAiR",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Chat_Trigger').item.json.sessionId }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        112,
        128
      ],
      "id": "5ded3128-e3ba-4552-ae93-b99162d5a1c8",
      "name": "MemoryN8N"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -32,
        128
      ],
      "id": "d8a7de2d-9cce-4b43-b699-8b0f02c74783",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "vjhsYdKrmtQkm6Tt",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        96,
        -96
      ],
      "id": "6e7e1625-6e33-419d-b145-6112ace80d7d",
      "name": "Chat_Trigger",
      "webhookId": "270fa1c8-fd9b-4c69-a556-25d47ea246c7"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-15T21:31:12.629Z",
      "updatedAt": "2025-09-15T21:31:12.629Z",
      "role": "workflow:owner",
      "workflowId": "JO1L5zmQHrgE1iaw",
      "projectId": "HHLWOKEAArOwm3kN"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-16T05:57:53.000Z",
  "versionId": "889e70f7-0c30-432f-8b28-a75458ce9ec7"
}