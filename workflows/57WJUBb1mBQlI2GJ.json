{
  "active": false,
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Code in JavaScript2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript2": {
      "main": [
        [
          {
            "node": "Update row in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Code in JavaScript1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript1": {
      "main": [
        [
          {
            "node": "Append row in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet1": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call 'My Own Practice'2": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [],
        [
          {
            "node": "Call 'My Own Practice'2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet1": {
      "main": [
        [
          {
            "node": "Call 'My Own Practice'3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet in Google Sheets1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Call 'My Own Practice'3": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-29T09:40:34.317Z",
  "id": "57WJUBb1mBQlI2GJ",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Email Scraper For Dental Clinic for free:My own made workflow",
  "nodes": [
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        1376,
        1392
      ],
      "id": "59b80e66-3b91-4e16-8554-dd230ca4d89b",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-pro",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-pro"
        },
        "messages": {
          "values": [
            {
              "content": "=Extract clinic name, email, and phone.\n\nReference URL: {{ $('Loop Over Items3').item.json.query }}\nWebsite HTML content: {{ $json.data }}"
            },
            {
              "content": "=You are an extraction engine. \nUse ONLY the provided website HTML (from {{ $json.data }}) to extract data. \nThe URL ({{ $('Loop Over Items3').item.json.query }}) is for reference only, NOT for extraction.\n\nRules:\n- Return only clinic name, email, and phone.\n- Output must be raw JSON only, no extra text or code fences.\n- If a field is missing, set it to null.\n- Email must match local@domain.tld or null.\n- Phone must match a real number format or null.\n- Name must come only from official branding in the HTML (title tag, header, logo) or null.\n\nFormat:\n{\n  \"email\": \"example@example.com\",\n  \"phone\": \"(212) 452-3344\",\n  \"name\": \"Forest Dental Clinic\"\n}\n",
              "role": "model"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        2272,
        1248
      ],
      "id": "a6f358e1-dd1f-4e9c-92a5-0ccee2a0123a",
      "name": "Message a model",
      "credentials": {
        "googlePalmApi": {
          "id": "sPfpmF39mpaLYCjc",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the raw AI output (nested parts)\nconst parts = $json?.content?.parts || [];\nlet raw = \"\";\n\n// Try to grab the second part, where the JSON usually is\nif (parts.length > 1 && parts[1].text) {\n  raw = parts[1].text;\n} else if (parts.length > 0 && parts[0].text) {\n  raw = parts[0].text;\n}\n\n// 1. Remove code fences (```json ... ```)\nlet cleaned = raw.replace(/```json|```/g, \"\").trim();\n\n// 2. Remove escaped newlines\ncleaned = cleaned.replace(/\\\\n/g, \"\\n\").trim();\n\n// 3. Parse JSON safely\nlet parsed;\ntry {\n  parsed = JSON.parse(cleaned);\n} catch (e) {\n  parsed = {\n    email: null,\n    phone: null,\n    name: null,\n    error: \"Failed to parse AI output\"\n  };\n}\n\n// Always enforce structure\nreturn {\n  email: parsed.email || null,\n  phone: parsed.phone || null,\n  name: parsed.name || null\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2624,
        1248
      ],
      "id": "dd6375ca-6db1-43dd-83cb-f9416a4d8ce1",
      "name": "Code in JavaScript2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Task: Find 100 dental clinic website URLs in the United States.\n\nInstructions:\n1. Use Google Maps or publicly available online sources to identify dental clinics located in the USA.\n2. Only include clinics that have a website listed. Skip clinics without websites.\n3. Do not include clinics outside the USA.\n4. Provide exact website URLs only, no extra information like addresses, phone numbers, or emails.\n5. Return the output as a plain list, one URL per line, in JSON format if possible.\n6. Make sure the URLs are live and correctly formatted (include https:// if applicable).\n7. Limit the output to exactly 100 unique websites.\n8. Exclude any websites already found in the Google Sheets tool.\n",
        "options": {
          "systemMessage": "=You are an expert AI agent that finds website URLs of dental clinics located only in the USA using Google Maps or other public online sources.  \n\nSTRICT RULES:\n- Only return valid URLs of dental clinics’ official websites along with the official name of the dental clinic as it appears on the website.\n- Do not include addresses, phone numbers, emails, or non-dental businesses.  \n- Always output strictly in JSON format with this structure:  \n\n{ \n\"websites\": [ \n\"https://www.exampleclinic1.com\", \n\"https://www.exampleclinic2.com\", \n... \n ] \n}\n\n\n- Always use the tool `Get row(s) in sheet in Google Sheets` to check for existing URLs.  \n  - Never return or search for any URLs already listed in the sheet.  \n  - Only provide new, unique website URLs not found in the sheet.  \n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1488,
        528
      ],
      "id": "f6bedea0-686f-418b-8860-757e12e2ebe9",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1488,
        752
      ],
      "id": "7634c670-6f3c-441c-966b-69e2644ec148",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "sPfpmF39mpaLYCjc",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6166317f-7ce3-4b39-aa22-6ca96fb2cad5",
              "name": "=query",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1840,
        528
      ],
      "id": "65d590d9-7296-4d8a-9b60-b218521db06a",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "jsCode": "// The input data is a string in items[0].json.query\nconst rawInputString = items[0].json.query;\n\n// The actual JSON data is embedded inside this string. We need to extract it.\n// Let's find the first '{' and the last '}' to get the JSON part.\nconst startIndex = rawInputString.indexOf('{');\nconst endIndex = rawInputString.lastIndexOf('}');\n\n// Check if we found a valid JSON object block\nif (startIndex === -1 || endIndex === -1) {\n  throw new Error(\"Could not find a JSON object in the input string.\");\n}\n\n// Extract the clean JSON string from between the braces\nconst jsonString = rawInputString.substring(startIndex, endIndex + 1);\n\ntry {\n  // Now, parse the clean JSON string\n  const data = JSON.parse(jsonString);\n\n  // The URLs are in an array under the 'websites' key\n  const websites = data.websites;\n\n  // Return a new item for each website. This is the standard\n  // way to process lists, allowing subsequent nodes to run\n  // for each individual URL.\n  return websites.map(url => {\n    return {\n      json: {\n        url: url\n      }\n    };\n  });\n\n} catch (error) {\n  // If parsing still fails, throw a more informative error\n  throw new Error(`Failed to parse JSON. Error: ${error.message}.`);\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2064,
        528
      ],
      "id": "a48df0f8-3267-4deb-9dfb-95784e2186af",
      "name": "Code in JavaScript1"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1SqQo5bPrZtgzPhzUPJHw9ikI4lKY0CPPQRBEjSQZBo8",
          "mode": "list",
          "cachedResultName": "Url Storage:Dental Clinics,Salons,BarberShops,Day Spa and MedSpa",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1SqQo5bPrZtgzPhzUPJHw9ikI4lKY0CPPQRBEjSQZBo8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1SqQo5bPrZtgzPhzUPJHw9ikI4lKY0CPPQRBEjSQZBo8/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Url": "={{ $json.url }}",
            "Name of the Clinic": "={{ $json.name }}"
          },
          "matchingColumns": [
            "Url"
          ],
          "schema": [
            {
              "id": "Url",
              "displayName": "Url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email ",
              "displayName": "Email ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "PhoneNumber",
              "displayName": "PhoneNumber",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Name of the Clinic",
              "displayName": "Name of the Clinic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email Sended?",
              "displayName": "Email Sended?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        2288,
        528
      ],
      "id": "450be56e-a9c0-47e0-803f-c90a3dcc6479",
      "name": "Append row in sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "JOHwDixlr7umKmYo",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "content": "To get website url of dental clinic in usa from google maps",
        "height": 656,
        "width": 2208,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1168,
        344
      ],
      "typeVersion": 1,
      "id": "1059a356-3fb9-4bef-8d30-cb6a248d9d44",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "To find Email and phone number of stored urls",
        "height": 608,
        "width": 2208,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1168,
        1024
      ],
      "typeVersion": 1,
      "id": "ad281f8d-6e47-4586-beb6-e3405017496c",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "57WJUBb1mBQlI2GJ",
          "mode": "list",
          "cachedResultName": "Email Scraper For Dental Clinic for free:My own made workflow"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {}
        },
        "mode": "each",
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        2736,
        448
      ],
      "id": "d0a35cc0-4b22-41e7-a434-536dae64df87",
      "name": "Call 'My Own Practice'2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2512,
        528
      ],
      "id": "a6ffbf30-c3db-423f-8d5e-78fa931d34da",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "amount": 0.5
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2960,
        528
      ],
      "id": "715360d7-d51b-438c-b3c3-ac45beddc5f4",
      "name": "Wait2",
      "webhookId": "72583972-f7ba-4e97-9d8d-470dacbccdb3"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1SqQo5bPrZtgzPhzUPJHw9ikI4lKY0CPPQRBEjSQZBo8",
          "mode": "list",
          "cachedResultName": "Url Storage:Dental Clinics,Salons,BarberShops,Day Spa and MedSpa",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1SqQo5bPrZtgzPhzUPJHw9ikI4lKY0CPPQRBEjSQZBo8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1SqQo5bPrZtgzPhzUPJHw9ikI4lKY0CPPQRBEjSQZBo8/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Email ": "={{ $json.email ? $json.email : 'notProvided' }}",
            "PhoneNumber": "={{ $json.phone ? $json.phone : 'notProvided' }}",
            "Url": "={{ $('When Executed by Another Workflow').item.json.Url }}",
            "Name of the Clinic": "={{ $json.name }}",
            "Email Sended?": "No"
          },
          "matchingColumns": [
            "Url"
          ],
          "schema": [
            {
              "id": "Url",
              "displayName": "Url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email ",
              "displayName": "Email ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "PhoneNumber",
              "displayName": "PhoneNumber",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Name of the Clinic",
              "displayName": "Name of the Clinic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email Sended?",
              "displayName": "Email Sended?",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        2848,
        1248
      ],
      "id": "2e214afa-0480-4c3a-ae54-12ea5c27eea2",
      "name": "Update row in sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "JOHwDixlr7umKmYo",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1SqQo5bPrZtgzPhzUPJHw9ikI4lKY0CPPQRBEjSQZBo8",
          "mode": "list",
          "cachedResultName": "Url Storage:Dental Clinics",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1SqQo5bPrZtgzPhzUPJHw9ikI4lKY0CPPQRBEjSQZBo8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1SqQo5bPrZtgzPhzUPJHw9ikI4lKY0CPPQRBEjSQZBo8/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        1616,
        752
      ],
      "id": "b5a51ffa-9eef-47ef-8f76-c134358d7cc7",
      "name": "Get row(s) in sheet in Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "JOHwDixlr7umKmYo",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "FaBU6QRJJzbX1ap7",
          "mode": "list",
          "cachedResultName": "Dental Clinic"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        3072,
        1312
      ],
      "id": "dd3d63d4-00d9-4342-951e-96afc311f06a",
      "name": "Call 'My Own Practice'3"
    },
    {
      "parameters": {
        "url": "={{ $json.Url }}",
        "options": {
          "batching": {
            "batch": {}
          },
          "allowUnauthorizedCerts": true,
          "redirect": {
            "redirect": {
              "maxRedirects": 10
            }
          },
          "response": {
            "response": {
              "responseFormat": "text"
            }
          },
          "timeout": "=30000"
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1824,
        1248
      ],
      "id": "dd84fb5b-fad8-4863-9660-96da77a8711d",
      "name": "HTTP Request1",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1600,
        1392
      ],
      "id": "f31534c0-4ff8-43fc-879c-41e2eaaa5f95",
      "name": "Loop Over Items3"
    },
    {
      "parameters": {
        "amount": 7
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2048,
        1248
      ],
      "id": "e5e15c83-5b2c-45cb-88b5-5c1533a5d679",
      "name": "Wait3",
      "webhookId": "ed36133a-03eb-4d4d-b554-02f9ccab67fe"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        1264,
        544
      ],
      "id": "1bdac5d5-af47-48ec-a76c-667745778250",
      "name": "When clicking ‘Execute workflow’"
    }
  ],
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "Url": "https://heartland.com/"
        }
      },
      {
        "json": {
          "Url": "https://www.aspendental.com/"
        }
      },
      {
        "json": {
          "Url": "https://www.pacificdentalservices.com/"
        }
      },
      {
        "json": {
          "Url": "https://smilebrands.com/"
        }
      },
      {
        "json": {
          "Url": "https://www.dentalcarealliance.com/"
        }
      },
      {
        "json": {
          "Url": "https://www.affordabledentures.com/"
        }
      },
      {
        "json": {
          "Url": "https://www.westerndental.com/"
        }
      },
      {
        "json": {
          "Url": "https://www.greatexpressions.com/"
        }
      },
      {
        "json": {
          "Url": "https://www.interdent.com/"
        }
      }
    ],
    "Message a model": [
      {
        "json": {
          "content": {
            "parts": [
              {
                "text": "\n"
              },
              {
                "text": "```json\n{\n  \"email\": \"info@comfortdental.biz\",\n  \"phone\": \"855-526-6524\",\n  \"name\": \"Comfort Dental\"\n}\n```"
              }
            ],
            "role": "model"
          },
          "finishReason": "STOP",
          "index": 0
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-29T09:40:34.320Z",
      "updatedAt": "2025-09-29T09:40:34.320Z",
      "role": "workflow:owner",
      "workflowId": "57WJUBb1mBQlI2GJ",
      "projectId": "HHLWOKEAArOwm3kN"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-10-01T18:16:23.000Z",
  "versionId": "85b9eb85-5862-435d-bf0a-c8892f31f1d7"
}