{
  "active": true,
  "connections": {
    "Gmail Trigger1": {
      "main": [
        [
          {
            "node": "Text Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Text Classifier",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Text Classifier": {
      "main": [
        [
          {
            "node": "Add label to message1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Add label to message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Text Classifier1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Vertex Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Text Classifier1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Text Classifier1": {
      "main": [
        [
          {
            "node": "Payment Alerts",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Trial Alerts",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Trial Alerts1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trial Alerts1": {
      "main": [
        []
      ]
    },
    "Gmail Trigger2": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript1": {
      "main": [
        [
          {
            "node": "Code in JavaScript2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript2": {
      "main": [
        [
          {
            "node": "Send a message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code in JavaScript1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-19T04:42:50.251Z",
  "id": "FPDMTLutIr6M8YQH",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Inbox Management AI Agent:https://youtu.be/x1tam0Fhymc?si=9nFv5J7EogNsVZV-",
  "nodes": [
    {
      "parameters": {
        "inputText": "={{ $json.snippet }}",
        "categories": {
          "categories": [
            {
              "category": "High Priorty",
              "description": "Important messages that need quick attention, such as client inquiries, urgent updates, deadlines, or messages from key contacts."
            },
            {
              "category": "Low Priorty",
              "description": "“Non-urgent messages like newsletters, promotions, general updates, or casual conversations that can be reviewed later."
            }
          ]
        },
        "options": {
          "systemPromptTemplate": "You are a text classification assistant. \nYour job is to read the input message and classify it into one of two categories: \n\n1. High Priority → Urgent, important, or time-sensitive messages. Examples: client inquiries, deadlines, urgent requests, key contacts, or issues requiring quick action.  \n2. Low Priority → Non-urgent, general, or less important messages. Examples: newsletters, promotions, marketing emails, casual conversations, or updates that don’t need immediate action.  \n\nReturn only the category name: “High Priority” or “Low Priority”.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1.1,
      "position": [
        -240,
        0
      ],
      "id": "19982e90-b2bc-464b-81e5-ba07c3646648",
      "name": "Text Classifier",
      "disabled": true
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "filters": {}
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.3,
      "position": [
        -496,
        0
      ],
      "id": "70047f55-8ee1-4bed-82c0-b74eff0250fa",
      "name": "Gmail Trigger1",
      "credentials": {
        "gmailOAuth2": {
          "id": "s2WwkLntcEWdzNj9",
          "name": "Gmail account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -256,
        160
      ],
      "id": "46fc615e-6d15-4e39-8407-d03322a3fc30",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "sPfpmF39mpaLYCjc",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $('Gmail Trigger1').item.json.id }}",
        "labelIds": [
          "Label_3595868053230573733"
        ]
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        112,
        112
      ],
      "id": "860bd4e6-a5bf-4bed-9406-1c9674f249ae",
      "name": "Add label to message",
      "webhookId": "8b991735-659f-4e03-a4ce-eb59f7b8de6d",
      "credentials": {
        "gmailOAuth2": {
          "id": "s2WwkLntcEWdzNj9",
          "name": "Gmail account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $('Gmail Trigger1').item.json.id }}",
        "labelIds": [
          "Label_4901851840010764771"
        ]
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        112,
        -48
      ],
      "id": "f44f79bb-4c51-44af-8d63-5b2930cb137d",
      "name": "Add label to message1",
      "webhookId": "8b991735-659f-4e03-a4ce-eb59f7b8de6d",
      "credentials": {
        "gmailOAuth2": {
          "id": "s2WwkLntcEWdzNj9",
          "name": "Gmail account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Nate Herk Workflow",
        "height": 496,
        "width": 1216,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -656,
        -128
      ],
      "typeVersion": 1,
      "id": "0cadeab0-1d1d-494a-b5bb-4e63e757995b",
      "name": "Sticky Note",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## My own active workflow for my personal use using Text Classifier.",
        "height": 688,
        "width": 1392,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        592,
        -320
      ],
      "typeVersion": 1,
      "id": "20fcd9ab-e308-4c33-9f7f-487b3106d190",
      "name": "Sticky Note1",
      "disabled": true
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "filters": {}
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.3,
      "position": [
        656,
        -80
      ],
      "id": "1cc77882-7526-4b82-8d74-fe0ad588793b",
      "name": "Gmail Trigger",
      "credentials": {
        "gmailOAuth2": {
          "id": "s2WwkLntcEWdzNj9",
          "name": "Gmail account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "inputText": "={{ $json.snippet }}",
        "categories": {
          "categories": [
            {
              "category": "Payment Alerts",
              "description": "Notifications related to billing, payments, or subscriptions — including upcoming or missed deadlines, payment confirmations, failed transactions, or required payment information."
            },
            {
              "category": "Trial Alerts",
              "description": "Messages about trial periods, such as trial activations, usage reminders, upcoming trial expirations, or instructions to upgrade before the trial ends."
            },
            {
              "category": "Subscription Alerts",
              "description": "Notifications about active paid services, including subscription renewals, upcoming charges, plan changes, usage limits, or billing confirmations from providers like Google Cloud and other platforms."
            },
            {
              "category": "General Updates",
              "description": "All other messages not related to trials, subscriptions, or payments — such as product updates, announcements, newsletters, promotions, or general communications."
            }
          ]
        },
        "options": {
          "systemPromptTemplate": "You are a text classification assistant.  \nRead the input message and classify it into exactly one of the following categories:  \n\n1. **Trial Updates** → Messages about trial periods, including activations, reminders, expirations, or upgrade instructions.  \n2. **Subscription Alerts** → Notifications about active paid services, renewals, upcoming charges, usage limits, or billing confirmations.  \n3. **Payment Alerts** → Billing-related notices, including upcoming/missed payment deadlines, failed transactions, payment confirmations, or required payment information.  \n4. **General Updates** → All other messages not related to trials, subscriptions, or payments (e.g., product updates, announcements, newsletters, promotions, general communication).  \n\nReturn only the category name as plain text:  \n- Trial Updates  \n- Subscription Alerts  \n- Payment Alerts  \n- General Updates\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1.1,
      "position": [
        976,
        -96
      ],
      "id": "c89debd0-97e1-406d-bbdf-d2889c031214",
      "name": "Text Classifier1",
      "disabled": true
    },
    {
      "parameters": {
        "projectId": {
          "__rl": true,
          "value": "modified-keep-470614-p0",
          "mode": "list",
          "cachedResultName": "My First Project"
        },
        "modelName": "gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleVertex",
      "typeVersion": 1,
      "position": [
        1024,
        128
      ],
      "id": "b53710d6-065c-491c-9804-12bb2ac2e939",
      "name": "Google Vertex Chat Model",
      "credentials": {
        "googleApi": {
          "id": "r6bDu2a9hxhItPLs",
          "name": "Google Service Account account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09DE5VGC2H",
          "mode": "list",
          "cachedResultName": "cloud"
        },
        "text": "={{ $json.snippet }}",
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1424,
        -288
      ],
      "id": "5b610dcc-703e-45ed-b3c3-eb18594dee37",
      "name": "Payment Alerts",
      "webhookId": "78e0c51c-1ba3-4d50-9005-12ee01f63381",
      "credentials": {
        "slackApi": {
          "id": "EHkrBNjWKBi9posn",
          "name": "Slack account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09DE5VGC2H",
          "mode": "list",
          "cachedResultName": "cloud"
        },
        "text": "={{ $('Gmail Trigger').item.json.snippet }}",
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1424,
        -128
      ],
      "id": "29f7c696-3a24-4034-b85f-edf5fe067f8a",
      "name": "Trial Alerts",
      "webhookId": "78e0c51c-1ba3-4d50-9005-12ee01f63381",
      "credentials": {
        "slackApi": {
          "id": "EHkrBNjWKBi9posn",
          "name": "Slack account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09DE5VGC2H",
          "mode": "list",
          "cachedResultName": "cloud"
        },
        "text": "={{ $('Gmail Trigger').item.json.snippet }}",
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1424,
        32
      ],
      "id": "af2ccc61-ea90-401f-92cf-da85ab3991c4",
      "name": "Trial Alerts1",
      "webhookId": "78e0c51c-1ba3-4d50-9005-12ee01f63381",
      "credentials": {
        "slackApi": {
          "id": "EHkrBNjWKBi9posn",
          "name": "Slack account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09DE5VGC2H",
          "mode": "list",
          "cachedResultName": "cloud"
        },
        "text": "={{ $('Gmail Trigger').item.json.snippet }}",
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1424,
        192
      ],
      "id": "cc860c80-ebcc-4ad8-a58f-63b39226ddec",
      "name": "Send a message",
      "webhookId": "cab51e7a-8f78-4e8e-9300-c35989ab7c50",
      "credentials": {
        "slackApi": {
          "id": "EHkrBNjWKBi9posn",
          "name": "Slack account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## My Workflow for my own use case without the cost of AI llm model.",
        "height": 496,
        "width": 1216,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -656,
        400
      ],
      "typeVersion": 1,
      "id": "68f2da0f-ffb8-46c5-a272-4c73eb0e7df0",
      "name": "Sticky Note3",
      "disabled": true
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "filters": {}
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.3,
      "position": [
        -608,
        560
      ],
      "id": "fd00ff0f-e793-4812-a6d9-8f55ed579675",
      "name": "Gmail Trigger2",
      "credentials": {
        "gmailOAuth2": {
          "id": "s2WwkLntcEWdzNj9",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// n8n Code Node (JavaScript)\n// Input: Gmail email snippet in items[0].json.snippet\n// Output: category in items[0].json.category\n\nconst text = (items[0].json.snippet || \"\").toLowerCase();\n\nlet category = \"General Updates\";\n\n// Trial Updates\nif (\n  text.includes(\"trial\") ||\n  text.includes(\"free trial\") ||\n  text.includes(\"trial ending\") ||\n  text.includes(\"trial expire\") ||\n  text.includes(\"upgrade trial\")\n) {\n  category = \"Trial Updates\";\n}\n\n// Subscription Alerts\nelse if (\n  text.includes(\"subscription\") ||\n  text.includes(\"renewal\") ||\n  text.includes(\"plan change\") ||\n  text.includes(\"usage limit\") ||\n  text.includes(\"renew\") ||\n  text.includes(\"auto-renew\")\n) {\n  category = \"Subscription Alerts\";\n}\n\n// Payment Alerts\nelse if (\n  text.includes(\"payment\") ||\n  text.includes(\"invoice\") ||\n  text.includes(\"billing\") ||\n  text.includes(\"transaction\") ||\n  text.includes(\"card declined\") ||\n  text.includes(\"payment failed\") ||\n  text.includes(\"charge\") ||\n  text.includes(\"receipt\")\n) {\n  category = \"Payment Alerts\";\n}\n\n// Default: General Updates\nelse {\n  category = \"General Updates\";\n}\n\nreturn [{ json: { ...items[0].json, category } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -400,
        560
      ],
      "id": "8d9fb1cd-7af9-42a9-9ce2-07bc3eaec059",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "439b9365-ffb6-49e6-ae9a-fb2c7061ca7e",
              "name": "Message",
              "value": "={{ $json.snippet }}",
              "type": "string"
            },
            {
              "id": "f40315d4-0389-452e-a961-8b5dfbffd3f8",
              "name": "Alert Type",
              "value": "={{ $json.category }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -224,
        560
      ],
      "id": "ee2b00b1-9a63-48e9-b179-47b0411e221f",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09DE5VGC2H",
          "mode": "list",
          "cachedResultName": "cloud"
        },
        "text": "={{ $json.formattedSlackMessage }}",
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        336,
        736
      ],
      "id": "5bc87a24-dbb0-4fec-9e3f-5573cbcd0708",
      "name": "Send a message1",
      "webhookId": "de4cbb3e-7207-4489-9ab8-76c72b4ba61f",
      "credentials": {
        "slackApi": {
          "id": "EHkrBNjWKBi9posn",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// This code will run for each item passed to the node.\nconst item = items[0];\n\n// The raw text from the input\nconst snippet = item.json.Message;\n\n// Helper function to safely extract a single piece of data.\nfunction extract(regex, text) {\n  if (typeof text !== 'string') {\n    return null;\n  }\n  const match = regex.exec(text);\n  return match ? match[1].trim() : null;\n}\n\n// --- REGEX DEFINITIONS ---\n// CORRECTED: This regex now handles both < > and &lt; &gt;\nconst fromRegex = /From: (.*?) (?:<|&lt;)(.*?)(?:>|&gt;)/;\nconst dateRegex = /Date: (.*?)(?= Subject:)/;\nconst subjectRegex = /Subject: (.*)(?= To:)/;\nconst amountRegex = /\\$(\\d+\\.\\d{2})/;\nconst recipientRegex = /payment to (.*?) was/;\nconst statusRegex = /was (unsuccessful|successful)/;\n\n// --- DATA EXTRACTION ---\nconst fromMatch = snippet.match(fromRegex);\nconst senderName = fromMatch ? fromMatch[1].trim() : null;\nconst senderEmail = fromMatch ? fromMatch[2].trim() : null;\nconst amount = extract(amountRegex, snippet);\n\n// --- BUILD THE OUTPUT OBJECT ---\nconst formattedOutput = {\n  alertType: \"Payment Alert\",\n  sender: {\n    name: senderName,\n    email: senderEmail\n  },\n  details: {\n    date: extract(dateRegex, snippet),\n    subject: extract(subjectRegex, snippet),\n    amount: amount ? parseFloat(amount) : null,\n    recipient: extract(recipientRegex, snippet),\n    status: extract(statusRegex, snippet)\n  },\n  originalMessage: snippet\n};\n\n// Return the new object with the data nested under the 'query' field\nreturn [{\n  json: {\n    query: formattedOutput\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -560,
        736
      ],
      "id": "c04c1daf-7efe-452a-a219-39e88069d825",
      "name": "Code in JavaScript1"
    },
    {
      "parameters": {
        "jsCode": "// This code READS the structured 'query' object from the previous node.\nconst item = items[0].json.query;\n\n// --- Safely get sender details with \"Not Provided\" as a fallback ---\nconst senderName = item.sender?.name || 'Not Provided';\nconst senderEmail = item.sender?.email || 'Not Provided';\n\n// --- Safely get payment details with \"Not Provided\" as a fallback ---\nconst status = item.details?.status || 'Not Provided';\nconst amount = item.details?.amount || 0; // Use 0 for amount to prevent errors\nconst recipient = item.details?.recipient || 'Not Provided';\nconst date = item.details?.date || 'Not Provided';\nconst subject = item.details?.subject || 'Not Provided';\n\n// --- Create a title and emoji based on the status ---\nlet title = '';\nlet emoji = '';\n\nif (status.toLowerCase() === 'unsuccessful') {\n  title = 'Payment Failed';\n  emoji = '🔴';\n} else if (status.toLowerCase() === 'successful') {\n  title = 'Payment Successful';\n  emoji = '✅';\n} else {\n  title = 'Payment Alert';\n  emoji = '⚠️';\n}\n\n// --- Build the formatted message, now including the Sender ---\nconst formattedMessage = `\n${emoji} *${title}*\n> A payment of *$${amount.toFixed(2)}* to *${recipient}* was reported as *${status}*.\n\n*Details:*\n• *Sender:* ${senderName}\n• *Email:* ${senderEmail}\n• *Date:* ${date}\n• *Subject:* ${subject}\n`;\n\n// --- Output the new formatted message ---\nreturn [{\n  json: {\n    // We pass along the original data and add our new formatted message\n    ...item,\n    formattedSlackMessage: formattedMessage.trim()\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        144,
        736
      ],
      "id": "1ce51bd6-32af-475f-acde-d659eba50c83",
      "name": "Code in JavaScript2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c086abf5-2d60-4078-81a7-f44c2a01af77",
              "leftValue": "={{ $json['Alert Type'] }}",
              "rightValue": "General Updates",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -48,
        560
      ],
      "id": "1da8b9be-2f87-4019-ab9a-b8c4892b3c14",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        160,
        464
      ],
      "id": "4f0d94ff-020f-4482-a165-e30c01061d1f",
      "name": "No Operation, do nothing"
    }
  ],
  "pinData": {
    "Gmail Trigger1": [
      {
        "json": {
          "id": "1996072586a74dd9",
          "threadId": "1996072586a74dd9",
          "snippet": "---------- Forwarded message --------- From: PUBG MOBILE &lt;noreply@mail.pubgmobile.com&gt; Date: Sat, Sep 6, 2025 at 12:05 PM Subject: Version 4.0 Coming Your Way: This Year&#39;s Spooktacular",
          "payload": {
            "mimeType": "multipart/alternative"
          },
          "sizeEstimate": 15185,
          "historyId": "90608",
          "internalDate": "1758259718000",
          "labels": [
            {
              "id": "INBOX",
              "name": "INBOX"
            },
            {
              "id": "IMPORTANT",
              "name": "IMPORTANT"
            },
            {
              "id": "CATEGORY_PERSONAL",
              "name": "CATEGORY_PERSONAL"
            },
            {
              "id": "UNREAD",
              "name": "UNREAD"
            }
          ],
          "From": "BG BANK <ubaidnasir1631@gmail.com>",
          "Subject": "Fwd: Version 4.0 Coming Your Way: This Year's Spooktacular Version",
          "To": "ubaidmukhtar237@gmail.com"
        }
      }
    ],
    "Gmail Trigger": [
      {
        "json": {
          "id": "199608092a9790eb",
          "threadId": "199587f0fd4a4442",
          "snippet": "---------- Forwarded message --------- From: Mukhtar Ubaid &lt;ubaidmukhtar237@gmail.com&gt; Date: Fri, Sep 19, 2025 at 10:43 AM Subject: Fwd: $20.00 payment to Cursor was unsuccessful again To: &lt;",
          "payload": {
            "mimeType": "multipart/alternative"
          },
          "sizeEstimate": 28306,
          "historyId": "90908",
          "internalDate": "1758260650000",
          "labels": [
            {
              "id": "INBOX",
              "name": "INBOX"
            },
            {
              "id": "IMPORTANT",
              "name": "IMPORTANT"
            },
            {
              "id": "CATEGORY_PERSONAL",
              "name": "CATEGORY_PERSONAL"
            },
            {
              "id": "UNREAD",
              "name": "UNREAD"
            }
          ],
          "From": "BG BANK <ubaidnasir1631@gmail.com>",
          "Subject": "Fwd: $20.00 payment to Cursor was unsuccessful again",
          "To": "ubaidmukhtar237@gmail.com"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-19T04:42:50.254Z",
      "updatedAt": "2025-09-19T04:42:50.254Z",
      "role": "workflow:owner",
      "workflowId": "FPDMTLutIr6M8YQH",
      "projectId": "HHLWOKEAArOwm3kN"
    }
  ],
  "staticData": {
    "node:Gmail Trigger2": {
      "Gmail Trigger2": {
        "lastTimeChecked": 1758700308,
        "possibleDuplicates": [
          "1997ab50c7f92b38",
          "1997aa740e6735c6"
        ]
      }
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-09-19T08:17:38.000Z",
  "versionId": "237aef4b-da9f-4dce-9d23-8b7c5b35c28e"
}